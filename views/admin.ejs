<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/admin.css">
    <title>Wi-Fi Access Portal</title>
</head>
<body class="container-fluid text-center">
    <div class="row">
        <section id="navbar" class="col-1 d-flex flex-column justify-content-between offset-md-2 bg-light p-3" style="min-height: 95vh;">
            <div class="navbar-brand text-center mb-4">
                <img src="/logo.svg" alt="Tiger Wheel & Tyre logo" class="img-fluid mb-3">
            </div>
            <div class="d-grid gap-4">
                <button class="btn btn-outline-secondary toggle-btn active" data-target="full-datad">
                    <img src="/icons/overview.svg" alt="Overview">
                </button>
                <button class="btn btn-outline-secondary toggle-btn" data-target="groups">
                    <img src="/icons/groups.svg" alt="Groups">
                </button>
                <button class="btn btn-outline-secondary toggle-btn" data-target="data-usage">
                    <img src="/icons/data-usage.svg" alt="Data Usage">
                </button>
                <button class="btn btn-outline-secondary toggle-btn" data-target="all-data">
                    <img src="/icons/all-data.svg" alt="All Data">
                </button>
            </div>
            <div class="d-grid gap-2">
                <button class="btn btn-outline-secondary" href="">Settings</button>
                <a href="/logout" class="btn btn-outline-danger">Logout</a>
            </div>
        </section>
        <div class="container-fluid col-11">
            <section class="col text-start">
                <h2 class="">Welcome <%fullData.fullName%></h2>
                <p class="lead">Welcome to the Wi-Fi Access Portal Admin Dashboard</p>
            </section>
            <section class="content-section col active">
            <table id="full-datad" class=" table table-bordered table-hover">                    
                <tr>
                    <th>Full name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Company</th> 
                    <th>Terms</th>
                    <th>Marketing</th>
                    <th>Action</th>
                </tr>
                <% fullData.forEach((row, index) => { %>
                    <tr>
                        <td><%= row.fullName %></td>
                        <td><%= row.email %></td>
                        <td><%= row.phone %></td>
                        <td><%= row.company %></td>
                        <td><%= row.terms %></td>
                        <td><%= row.marketing %></td>
                        <td>
                            <div class="dropdown">
                                <div class="menu-btn">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <circle cx="12" cy="6" r="2" fill="#666666"/>
                                        <circle cx="12" cy="12" r="2" fill="#666666"/>
                                        <circle cx="12" cy="18" r="2" fill="#666666"/>
                                    </svg>
                                </div>
                                <div class="dropdown-content">
                                    <a href="#">Link 1</a>
                                    <a href="#">Link 2</a>
                                    <a href="#" class="delete-link" data-name="<%= row.fullName %>" data-email="<%= row.email %>">Delete</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                <% }) %> 
            </table>
        </section>
            <section class="content-section col">
                <table id="groups" class=" table table-bordered table-hover">
                    <tr>
                        <th>Full name</th>
                        <th>Email</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                    <% groups.forEach((row, index) => { %>
                        <tr>
                            <td><%= row.fullName %></td>
                            <td><%= row.email %></td>
                            <td><%= row.GroupName %></td>
                            <td>
                                <div class="dropdown">
                                    <div class="menu-btn">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <circle cx="12" cy="6" r="2" fill="#666666"/>
                                            <circle cx="12" cy="12" r="2" fill="#666666"/>
                                            <circle cx="12" cy="18" r="2" fill="#666666"/>
                                        </svg>
                                    </div>
                                    <div class="dropdown-content">
                                        <a href="#">Edit User</a>
                                        <a href="#" class="delete-link" data-name="<%= row.fullName %>" data-email="<%= row.email %>">Delete</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    <% }) %> 
                </table>
            </section>
        </div>
    </div>
    

    <!-- Modal placed outside the table -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5">Are you sure you want to proceed</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <strong>Warning!</strong> You are about to permanently delete <strong id="userToDelete"></strong>'s data.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete User</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS  -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>


    <script>
            <!-- Handles bav button opening and closing of the tables -->

    document.addEventListener('DOMContentLoaded', function() {
    // Toggle functionality
    const buttons = document.querySelectorAll('.toggle-btn');
    const contents = document.querySelectorAll('.content-section');

    buttons.forEach(button => {
        button.addEventListener('click', function() {
            // Remove active classes
            buttons.forEach(btn => btn.classList.remove('active'));
            
            // Add active class to clicked button
            this.classList.add('active');
            
            // Hide all content sections
            contents.forEach(content => {
                content.style.display = 'none';
            });
            
            // Show the targeted content
            const targetId = this.getAttribute('data-target');
            const targetContent = document.getElementById(targetId);
            if (targetContent) {
                targetContent.style.display = 'block';
            }
        });
    });

    // Rest of your existing event listeners...
});
    </script>

    <script> 
        console.log('Script starting...');
        
        let userToDelete = null;

        // Wait for DOM to load
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded, setting up event listeners...');
});  // Added missing parenthesis and semicolon

// Handle delete button clicks
document.addEventListener('click', function(e) {
    console.log('Click detected on:', e.target.tagName, e.target.className);

    if (e.target.classList.contains('delete-link')) {
        e.preventDefault();
        e.stopPropagation();

        console.log('Delete link clicked!');

        const fullName = e.target.dataset.name;
        const email = e.target.dataset.email;

        console.log('User data:', { fullName, email });

        const userToDelete = { fullName, email };  // Added missing const
        document.getElementById('userToDelete').textContent = fullName;

        // Show modal - using the correct ID
        console.log('Attempting to show modal...');
        const modalElement = document.getElementById('staticBackdrop');
        console.log('Modal element found:', modalElement);

        if (modalElement) {
            const modal = new bootstrap.Modal(modalElement);
            modal.show();
            console.log('Modal.show() called');
        } else {
            console.error('Modal element not found!');
        }
    }  // Added missing closing brace for if statement
});  // Added missing closing parenthesis and semicolon

// Handle confirm delete
document.getElementById('confirmDeleteBtn').addEventListener('click', async function() {
    console.log('Confirm delete clicked');
    if (!userToDelete) return;

    try {
        const response = await fetch('/delete-user', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(userToDelete)
        });  // Added missing closing parenthesis and semicolon
        
        // Add your response handling code here
    } catch (error) {
        console.error('Delete error:', error);
    }
});  // Added missing closing parenthesis and semicolon
            
            // Handle dropdown menu functionality
const menuBtns = document.querySelectorAll('.dropdown');
console.log('Found dropdowns:', menuBtns.length);

menuBtns.forEach(dropdown => {
    const btn = dropdown.querySelector('.menu-btn');
    const dropdownContent = dropdown.querySelector('.dropdown-content');
    
    if (!btn || !dropdownContent) {
        console.warn('Dropdown missing required elements:', dropdown);
        return;
    }

    // Add ARIA attributes for accessibility
    btn.setAttribute('aria-haspopup', 'true');
    btn.setAttribute('aria-expanded', 'false');
    dropdownContent.setAttribute('aria-hidden', 'true');

    btn.addEventListener('click', function(e) {
        e.stopPropagation();
        console.log('Dropdown menu clicked');
        
        // Close all other dropdowns first
        document.querySelectorAll('.dropdown-content').forEach(content => {
            if (content !== dropdownContent) {
                content.style.display = 'none';
                content.setAttribute('aria-hidden', 'true');
                content.previousElementSibling?.setAttribute('aria-expanded', 'false');
            }
        });
        
        // Toggle current dropdown
        const isOpen = dropdownContent.style.display === 'block';
        dropdownContent.style.display = isOpen ? 'none' : 'block';
        dropdownContent.setAttribute('aria-hidden', isOpen ? 'true' : 'false');
        btn.setAttribute('aria-expanded', isOpen ? 'false' : 'true');
    });

    // Keyboard navigation support
    btn.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            btn.click();
        }
    });
});

// Close dropdown when clicking outside
document.addEventListener('click', function(e) {
    // Only close if not clicking on any dropdown-related element
    if (!e.target.closest('.dropdown')) {
        document.querySelectorAll('.dropdown-content').forEach(dropdown => {
            dropdown.style.display = 'none';
            dropdown.setAttribute('aria-hidden', 'true');
            dropdown.previousElementSibling?.setAttribute('aria-expanded', 'false');
        });
    }
});

// Prevent dropdown from closing when clicking inside it
document.querySelectorAll('.dropdown-content').forEach(dropdown => {
    dropdown.addEventListener('click', function(e) {
        e.stopPropagation();
    });
});

console.log('All event listeners set up successfully');
    </script>
</body>
</html>