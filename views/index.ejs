<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hotspot Login</title>
  <style>
    :root {
      --primary-color: #8B5A2B;
      --primary-hover: #6B4423;
      --secondary-color: #F5F0E6;
      --text-color: #3C2A1E;
      --light-text: #7D6B5D;
      --error-color: #B33A3A;
      --success-color: #5A8B2B;
      --background-color: #F8F4EB;
      --form-bg: #FFFFFF;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    body {
      background-color: var(--background-color);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 1rem;
    }
    
    .container {
      width: 100%;
      max-width: 400px;
      background-color: var(--form-bg);
      border-radius: 12px;
      box-shadow: 0 6px 20px rgba(139, 90, 43, 0.15);
      overflow: hidden;
    }
    
    .header {
      background-color: var(--primary-color);
      color: white;
      padding: 1.5rem;
      text-align: center;
    }
    
    .header h1 {
      font-size: 1.5rem;
      margin-bottom: 0.5rem;
    }
    
    .header p {
      font-size: 0.9rem;
      opacity: 0.9;
    }
    
    .wifi-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
    }
    
    .form-container {
      padding: 1.5rem;
    }
    
    .form-group {
      margin-bottom: 1.2rem;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--text-color);
      font-size: 0.9rem;
    }
    
    .form-input {
      width: 100%;
      padding: 0.8rem 1rem;
      border: 1px solid #E0D5C5;
      border-radius: 8px;
      font-size: 1rem;
      transition: border-color 0.3s;
    }
    
    .form-input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(139, 90, 43, 0.2);
    }
    
    .btn {
      width: 100%;
      padding: 0.8rem;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background-color 0.3s;
      margin-top: 0.5rem;
    }
    
    .btn:hover {
      background-color: var(--primary-hover);
    }
    
    .info-text {
      text-align: center;
      font-size: 0.85rem;
      color: var(--light-text);
      margin-top: 1.5rem;
    }
    
    .status-message {
      padding: 0.7rem;
      border-radius: 8px;
      margin-bottom: 1rem;
      font-size: 0.9rem;
      display: none;
    }
    
    .error {
      display: block;
      background-color: rgba(179, 58, 58, 0.1);
      color: var(--error-color);
      border: 1px solid rgba(179, 58, 58, 0.3);
    }
    
    .success {
      display: block;
      background-color: rgba(90, 139, 43, 0.1);
      color: var(--success-color);
      border: 1px solid rgba(90, 139, 43, 0.3);
    }
    
    .footer {
      padding: 1rem;
      text-align: center;
      background-color: var(--secondary-color);
      font-size: 0.85rem;
      color: var(--light-text);
    }
    
    .network-strength {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      margin-top: 0.5rem;
    }
    
    .signal-bar {
      height: 12px;
      width: 6px;
      background-color: rgba(255, 255, 255, 0.4);
      border-radius: 1px;
    }
    
    .active {
      background-color: white;
    }
    
    /* Responsive adjustments */
    @media (max-width: 480px) {
      .container {
        border-radius: 8px;
      }
      
      .header {
        padding: 1.2rem;
      }
      
      .form-container {
        padding: 1.2rem;
      }
      
      .btn {
        padding: 0.7rem;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <div class="wifi-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M5 12.55a11 11 0 0 1 14.08 0"></path>
          <path d="M1.42 9a16 16 0 0 1 21.16 0"></path>
          <path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path>
          <line x1="12" y1="20" x2="12" y2="20"></line>
        </svg>
      </div>
      <h1>WiFi Hotspot Login</h1>
      <p>Connect to the internet securely</p>
      <div class="network-strength">
        <div class="signal-bar active"></div>
        <div class="signal-bar active"></div>
        <div class="signal-bar active"></div>
        <div class="signal-bar"></div>
      </div>
    </div>
    
    <div class="form-container">
      <div class="status-message" id="status-message"></div>
      
      <form id="login-form">
        <div class="form-group">
          <label for="email">Email Address</label>
          <input type="email" id="email" class="form-input" placeholder="Enter your email address" required>
        </div>
        
        <button type="submit" class="btn" id="login-btn">Connect Now</button>
      </form>
      
      <p class="info-text">By connecting, you agree to our Terms of Service and Privacy Policy</p>
    </div>
    
    <div class="footer">
      Need help? Contact the network administrator
    </div>
  </div>
  
  <script>
    // Form submission handler
    document.getElementById('login-form').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const email = document.getElementById('email').value;
      const statusMessage = document.getElementById('status-message');
      const loginBtn = document.getElementById('login-btn');
      
      // Simple validation example
      if (email.trim() === '') {
        statusMessage.textContent = 'Please enter your email address';
        statusMessage.className = 'status-message error';
        return;
      }
      
      // Basic email validation
      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email)) {
        statusMessage.textContent = 'Please enter a valid email address';
        statusMessage.className = 'status-message error';
        return;
      }
      
      // Simulate login process
      loginBtn.textContent = 'Connecting...';
      loginBtn.disabled = true;
      
      setTimeout(() => {
        // For demo purposes, we'll show a success message
        statusMessage.textContent = 'Successfully connected to the network!';
        statusMessage.className = 'status-message success';
        loginBtn.textContent = 'Connected';
        
        // In a real application, you would redirect or perform additional actions
        setTimeout(() => {
          // Redirect logic would go here
          loginBtn.textContent = 'Connect Now';
          loginBtn.disabled = false;
        }, 2000);
      }, 1500);
    });
  </script>
</body>
</html>